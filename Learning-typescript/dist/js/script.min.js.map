{"version":3,"sources":["script.ts"],"names":["RedGreenBlue","age","surname","isAdult","arr","arr2","arr3","Array","nameAndAge","red","green","blue","helloWorld","console","log","lengthOfWorld","word","test","length","GREEN","user","id","user2","user3","name","user4","email","user5","user6","role"],"mappings":"AAAA,IAoBKA,aApBCC,IAAc,GAChBC,QAAkB,SAChBC,QAAmB,CAAA,EAEnBC,IAAgB,CAAC,EAAG,EAAG,EAAG,GAE1BC,KAAsB,CAAC,EAAG,EAAG,GAE7BC,KAAOC,MAAM,EAAG,EAAG,EAAG,CAAC,EAI7BC,WAAa,CACG,OACA,IAEVC,IAAc,MACdC,MAAgB,QAChBC,KAAe,OASrB,SAASC,aACRC,QAAQC,IAAI,aAAa,CAC1B,CAEA,SAASC,cAAcC,EAAcC,GAQpC,OAJIA,GACHJ,QAAQC,IAAIG,CAAI,EAGVD,EAAKE,MACb,EApBKlB,IACJA,EAAA,IAAA,MACAA,EAAA,MAAA,QACAA,EAAA,KAAA,MACA,GAJIA,aAAAA,cAAY,EAAA,EAKjBa,QAAQC,IAAId,aAAamB,KAAK,EAiB9BN,QAAQC,IAAIC,cAAc,WAAY,OAAO,CAAC,EAE9C,IAAMK,KAAO,CAAEC,GAAI,EAAE,EACfC,MAAgB,CAAED,GAAI,EAAE,EACxBE,MAAsC,CAAEF,GAAI,GAAIG,KAAM,MAAM,EAI5DC,MAAc,CAAEJ,GAAI,EAAGK,MAAO,MAAM,EACpCC,MAAc,CAAEN,GAAI,GAAIK,MAAO,KAAK,EAIpCE,MAAsB,CAAEP,GAAI,EAAGK,MAAO,MAAOG,KAAM,OAAO","file":"script.min.js","sourcesContent":["const age: number = 54;\r\nlet surname: string = \"Potter\";\r\nconst isAdult: boolean = true;\r\n\r\nconst arr: number[] = [1, 2, 3, 4];\r\n\r\nconst arr2: Array<number> = [1, 2, 3];\r\n\r\nconst arr3 = Array(1, 2, 3, 4);\r\n\r\nlet nameAndAge: [string, number];\r\n\r\nnameAndAge = [\"Ania\", 11];\r\nnameAndAge[0] = \"Test\";\r\nnameAndAge[1] = 19;\r\n\r\nconst red: string = \"red\";\r\nconst green: string = \"green\";\r\nconst blue: string = \"blue\";\r\n\r\nenum RedGreenBlue {\r\n\tRED = \"red\",\r\n\tGREEN = \"green\",\r\n\tBLUE = \"blue\",\r\n}\r\nconsole.log(RedGreenBlue.GREEN);\r\n\r\nfunction helloWorld(): void {\r\n\tconsole.log(\"Hello World\");\r\n}\r\n\r\nfunction lengthOfWorld(word: string, test?: string): number {\r\n\t//test? - parametr opcjonalny(nie trzeba podawać)\r\n\t//powinno się definiować typ parametru oraz funkcji!!\r\n\r\n\tif (test) {\r\n\t\tconsole.log(test);\r\n\t}\r\n\r\n\treturn word.length;\r\n}\r\n\r\nconsole.log(lengthOfWorld(\"TestWord\", \"test2\"));\r\n\r\nconst user = { id: 12 };\r\nconst user2: object = { id: 12 };\r\nconst user3: { id: number; name: string } = { id: 12, name: \"Ania\" };\r\n\r\ntype User = { id: number; email: string };\r\n\r\nconst user4: User = { id: 1, email: \"John\" };\r\nconst user5: User = { id: 12, email: \"Ann\" };\r\n\r\ntype Admin = { role: string };\r\n\r\nconst user6: User & Admin = { id: 3, email: \"Tst\", role: \"ADMIN\" }; //Rozszerzamy zakres typów type User\r\n"]}