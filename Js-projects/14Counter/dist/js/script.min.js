function _createForOfIteratorHelper(t,r){var e,n,o,a,u="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(u)return o=!(n=!0),{s:function(){u=u.call(t)},n:function(){var t=u.next();return n=t.done,t},e:function(t){o=!0,e=t},f:function(){try{n||null==u.return||u.return()}finally{if(o)throw e}}};if(Array.isArray(t)||(u=_unsupportedIterableToArray(t))||r&&t&&"number"==typeof t.length)return u&&(t=u),a=0,{s:r=function(){},n:function(){return a>=t.length?{done:!0}:{done:!1,value:t[a++]}},e:function(t){throw t},f:r};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(t,r){var e;if(t)return"string"==typeof t?_arrayLikeToArray(t,r):"Map"===(e="Object"===(e={}.toString.call(t).slice(8,-1))&&t.constructor?t.constructor.name:e)||"Set"===e?Array.from(t):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?_arrayLikeToArray(t,r):void 0}function _arrayLikeToArray(t,r){(null==r||r>t.length)&&(r=t.length);for(var e=0,n=Array(r);e<r;e++)n[e]=t[e];return n}var counterItems=document.querySelectorAll(".counter"),counterBox=document.querySelector(".counter-box"),options={rootMargin:"-250px"},startCounter=function(t){var r,e=_createForOfIteratorHelper(t);try{for(e.s();!(r=e.n()).done;)r.value.isIntersecting&&counterItems.forEach(function(t){_updateCounter(t)})}catch(t){e.e(t)}finally{e.f()}},_updateCounter=function(t){var r=t.dataset.number,e=parseInt(t.textContent);e<r?(t.textContent="".concat(Math.floor(e+r/300)),setTimeout(function(){_updateCounter(t)},1)):t.textContent=r},observer=new IntersectionObserver(startCounter,options);observer.observe(counterBox);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdC5qcyJdLCJuYW1lcyI6WyJjb3VudGVySXRlbXMiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJjb3VudGVyQm94IiwicXVlcnlTZWxlY3RvciIsIm9wdGlvbnMiLCJyb290TWFyZ2luIiwiX3N0ZXAiLCJlbnRyaWVzIiwiX2l0ZXJhdG9yIiwicyIsIm4iLCJkb25lIiwidmFsdWUiLCJpc0ludGVyc2VjdGluZyIsImZvckVhY2giLCJjb3VudGVyIiwic3RhcnRDb3VudGVyIiwiZXJyIiwiZSIsImYiLCJ1cGRhdGVDb3VudGVyIiwiZmluYWxOdW1iZXIiLCJkYXRhc2V0IiwibnVtYmVyIiwidGV4dENvbnRlbnQiLCJjb25jYXQiLCJNYXRoIiwiZmxvb3IiLCJzZXRUaW1lb3V0Iiwib2JzZXJ2ZXIiXSwibWFwcGluZ3MiOiJxbUNBQUEsSUFBTUEsYUFBZUMsU0FBU0MsaUJBQWlCLFVBQVUsRUFDbkRDLFdBQWFGLFNBQVNHLGNBQWMsY0FBYyxFQUVsREMsUUFBVSxDQUNmQyxXQUFZLFFBSmIsRUFDTUgsYUFBYUYsU0FBQUEsR0FBU0csSUFFWkcsRUFGWUgsRUFBQUEsMkJBRVpJLENBQUEsRUFBQSxJQUFoQixJQUFBQyxFQUFBQyxFQUFBLEVBQUEsRUFBQUgsRUFBQUUsRUFBQUUsRUFBQSxHQUFBQyxNQUFnQkwsRUFBQU0sTUFDTEMsZ0JBQ1ZkLGFBQUFlLFFBQUEsU0FBQUMsR0FDS0MsZUFBWUQsQ0FBRyxDQUFhLENBQUEsQ0FDTixDQUFBLE1BQUFFLEdBQUFULEVBQUFVLEVBQUFELENBQUEsQ0FBQSxDQUFBLFFBQUFULEVBQUFXLEVBQUEsQ0FBQSxDQU81QixFQU5FQyxlQUFVUCxTQUFBQSxHQVNYLElBQU1RLEVBUlNQLEVBQVFRLFFBQUFDLE9BU2pCWCxFQVJIUSxTQUFhTCxFQUFRUyxXQUFDLEVBR3hCWixFQUFBSyxHQVVBRixFQVZBUCxZQUFBLEdBQUFpQixPQUFBQyxLQUFBQyxNQUFBZixFQURBUyxFQUFBLEdBQ0EsQ0FBQSxFQUFBTyxXQUFBLFdBWUNSLGVBWkRMLENBQUEsQ0FBQSxFQUFBLENBQUEsR0FHRkEsRUFBTUssWUFBZ0JDLENBY3RCLEVBUktULFNBQVFTLElBQUFBLHFCQUFhTCxhQUFBWixPQUFBLEVBWTFCeUIsU0FWRUQsUUFBVzFCLFVBQU0iLCJmaWxlIjoic2NyaXB0Lm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNvdW50ZXJJdGVtcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuY291bnRlclwiKTtcclxuY29uc3QgY291bnRlckJveCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY291bnRlci1ib3hcIik7XHJcblxyXG5jb25zdCBvcHRpb25zID0ge1xyXG5cdHJvb3RNYXJnaW46IFwiLTI1MHB4XCIsXHJcbn07XHJcbmNvbnN0IHN0YXJ0Q291bnRlciA9IChlbnRyaWVzKSA9PiB7XHJcblx0Zm9yIChjb25zdCBlbnRyeSBvZiBlbnRyaWVzKSB7XHJcblx0XHRpZiAoZW50cnkuaXNJbnRlcnNlY3RpbmcpIHtcclxuXHRcdFx0Y291bnRlckl0ZW1zLmZvckVhY2goKGNvdW50ZXIpID0+IHtcclxuXHRcdFx0XHR1cGRhdGVDb3VudGVyKGNvdW50ZXIpO1xyXG5cdFx0XHR9KTtcclxuXHRcdH1cclxuXHR9XHJcbn07XHJcblxyXG5jb25zdCB1cGRhdGVDb3VudGVyID0gKGNvdW50ZXIpID0+IHtcclxuXHRjb25zdCBmaW5hbE51bWJlciA9IGNvdW50ZXIuZGF0YXNldC5udW1iZXI7XHJcblx0Y29uc3QgdmFsdWUgPSBwYXJzZUludChjb3VudGVyLnRleHRDb250ZW50KTtcclxuXHJcblx0Y29uc3Qgc3BlZWQgPSBmaW5hbE51bWJlciAvIDMwMFxyXG5cclxuXHRpZiAodmFsdWUgPCBmaW5hbE51bWJlcikge1xyXG5cdFx0Y291bnRlci50ZXh0Q29udGVudCA9IGAke01hdGguZmxvb3IodmFsdWUgKyBzcGVlZCl9YDtcclxuXHRcdHNldFRpbWVvdXQoKCkgPT4ge1xyXG5cdFx0XHR1cGRhdGVDb3VudGVyKGNvdW50ZXIpO1xyXG5cdFx0fSwgMSk7XHJcblx0fSBlbHNlIHtcclxuXHRcdGNvdW50ZXIudGV4dENvbnRlbnQgPSBmaW5hbE51bWJlcjtcclxuXHR9XHJcbn07XHJcblxyXG5jb25zdCBvYnNlcnZlciA9IG5ldyBJbnRlcnNlY3Rpb25PYnNlcnZlcihzdGFydENvdW50ZXIsIG9wdGlvbnMpO1xyXG5cclxub2JzZXJ2ZXIub2JzZXJ2ZShjb3VudGVyQm94KTtcclxuIl19
